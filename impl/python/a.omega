Noop 'call main'
Noop 'callexpr_bare: omega/main'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
PushSP 0
Swap 
Store 
Noop 'Call main'
PushLabel 'fn_main()->void'
Call 
Noop 'Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
PushFP -1
Load 
Noop 'Set FP to caller'
PushFP 1
Load 
PopFP 
RestoreEvalStack 
Noop 'Dealloc fsize (5)'
Pop 
Pop 
Pop 
Pop 
Pop 
Noop 'RET as rval'
Label 'fn_g()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop 'Print'
PushImmediate 1
Print 
Label 'dealloc-scope_0x7fe7c7025300'
PushSP -1
Load 
JumpIfNotZero 'fn_g()->void-bail'
Label 'fn_g()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_f()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop 'Print'
PushImmediate 2
Print 
Noop 'callexpr_bare: omega/g'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
PushSP 0
Swap 
Store 
Noop 'Call g'
PushLabel 'fn_g()->void'
Call 
Noop 'Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
PushFP -1
Load 
Noop 'Set FP to caller'
PushFP 1
Load 
PopFP 
RestoreEvalStack 
Noop 'Dealloc fsize (5)'
Pop 
Pop 
Pop 
Pop 
Pop 
Noop 'RET as rval'
PushSP -1'Decrement SP'
PopSP 
Noop 'Print'
PushImmediate 3
Print 
Noop 'callexpr_bare: omega/g'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
PushSP 0
Swap 
Store 
Noop 'Call g'
PushLabel 'fn_g()->void'
Call 
Noop 'Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
PushFP -1
Load 
Noop 'Set FP to caller'
PushFP 1
Load 
PopFP 
RestoreEvalStack 
Noop 'Dealloc fsize (5)'
Pop 
Pop 
Pop 
Pop 
Pop 
Noop 'RET as rval'
PushSP -1'Decrement SP'
PopSP 
Label 'dealloc-scope_0x7fe7c70253f0'
PushSP -1
Load 
JumpIfNotZero 'fn_f()->void-bail'
Label 'fn_f()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_main()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop 'Print'
PushImmediate 4
Print 
Noop 'callexpr_bare: omega/f'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
PushSP 0
Swap 
Store 
Noop 'Call f'
PushLabel 'fn_f()->void'
Call 
Noop 'Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
PushFP -1
Load 
Noop 'Set FP to caller'
PushFP 1
Load 
PopFP 
RestoreEvalStack 
Noop 'Dealloc fsize (5)'
Pop 
Pop 
Pop 
Pop 
Pop 
Noop 'RET as rval'
PushSP -1'Decrement SP'
PopSP 
Noop 'callexpr_bare: omega/g'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
PushSP 0
Swap 
Store 
Noop 'Call g'
PushLabel 'fn_g()->void'
Call 
Noop 'Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
PushFP -1
Load 
Noop 'Set FP to caller'
PushFP 1
Load 
PopFP 
RestoreEvalStack 
Noop 'Dealloc fsize (5)'
Pop 
Pop 
Pop 
Pop 
Pop 
Noop 'RET as rval'
PushSP -1'Decrement SP'
PopSP 
Noop 'Print'
PushImmediate 5
Print 
Label 'dealloc-scope_0x7fe7c70246d0'
PushSP -1
Load 
JumpIfNotZero 'fn_main()->void-bail'
Label 'fn_main()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
