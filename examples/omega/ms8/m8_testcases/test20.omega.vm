Noop 'call main'
Noop '-callexpr_bare: omega/main'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call main'
PushLabel 'fn_main()->void'
Call 'call main'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Halt 
Label 'fn_g()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 1
Print 
Label 'dealloc-scope_0x7f0f7c804220'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_g()->void-bail'
Label 'fn_g()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_f()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 2
Print 
Noop '-callexpr_bare: omega/g'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call g'
PushLabel 'fn_g()->void'
Call 'call g'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
PushImmediate 3
Print 
Noop '-callexpr_bare: omega/g'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call g'
PushLabel 'fn_g()->void'
Call 'call g'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
PushImmediate 7
Print 
PushImmediate 8
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 9
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 10
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 11
Print 
Label 'dealloc-scope_0x7f0f7c7d6bc0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d6c80'
Label 'dealloc-scope_0x7f0f7c7d6c80'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c8044f0'
Label 'dealloc-scope_0x7f0f7c8044f0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c804490'
PushImmediate 12
Print 
Label 'dealloc-scope_0x7f0f7c804490'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c804430'
Label 'dealloc-scope_0x7f0f7c804430'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c8042e0'
Label 'dealloc-scope_0x7f0f7c8042e0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_f()->void-bail'
Label 'fn_f()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_main()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 4
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '-callexpr_bare: omega/f'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call f'
PushLabel 'fn_f()->void'
Call 'call f'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
Label 'dealloc-scope_0x7f0f7c804070'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d6530'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '-callexpr_bare: omega/g'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call g'
PushLabel 'fn_g()->void'
Call 'call g'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
Label 'dealloc-scope_0x7f0f7c7d7430'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d6530'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 17
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '-callexpr_bare: omega/f'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call f'
PushLabel 'fn_f()->void'
Call 'call f'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
Label 'dealloc-scope_0x7f0f7c8045b0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d7ca0'
Label 'dealloc-scope_0x7f0f7c7d7ca0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d7d60'
PushImmediate 19
Print 
Label 'dealloc-scope_0x7f0f7c7d7d60'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d76d0'
Label 'dealloc-scope_0x7f0f7c7d76d0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f0f7c7d6530'
PushImmediate 5
Print 
Label 'dealloc-scope_0x7f0f7c7d6530'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_main()->void-bail'
Label 'fn_main()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
