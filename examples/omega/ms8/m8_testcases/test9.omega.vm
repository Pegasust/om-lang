Noop 'call main'
Noop '-callexpr_bare: omega/main'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call main'
PushLabel 'fn_main()->void'
Call 'call main'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Halt 
Label 'fn_foo()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 9
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 10
Print 
Label 'dealloc-scope_0x7f23eecf08e0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecf0820'
PushImmediate 11
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 90
Print 
Label 'dealloc-scope_0x7f23eecf0940'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecf0820'
PushImmediate 91
Print 
PushImmediate 92
Print 
PushImmediate 93
Print 
Label 'dealloc-scope_0x7f23eecf0820'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_foo()->void-bail'
Label 'fn_foo()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_foo1()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 101
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 102
Print 
Label 'dealloc-scope_0x7f23eecf0ac0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecf0a00'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 103
Print 
Label 'dealloc-scope_0x7f23eecc2950'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecf0a00'
Label 'dealloc-scope_0x7f23eecf0a00'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_foo1()->void-bail'
Label 'fn_foo1()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_foo2()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 2002
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 2003
Print 
PushImmediate 2004
Print 
PushImmediate 2005
Print 
Label 'dealloc-scope_0x7f23eecf0be0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecc2ad0'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 400
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 401
Print 
Label 'dealloc-scope_0x7f23eecf0cd0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecc30d0'
Label 'dealloc-scope_0x7f23eecc30d0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecc2ad0'
Label 'dealloc-scope_0x7f23eecc2ad0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_foo2()->void-bail'
Label 'fn_foo2()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
Label 'fn_main()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 98
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 99
Print 
Noop '-callexpr_bare: omega/foo'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call foo'
PushLabel 'fn_foo()->void'
Call 'call foo'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
PushImmediate 100
Print 
Label 'dealloc-scope_0x7f23eecf0d90'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecc33d0'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 2000
Print 
Noop '-callexpr_bare: omega/foo1'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call foo1'
PushLabel 'fn_foo1()->void'
Call 'call foo1'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
PushImmediate 20001
Print 
Label 'dealloc-scope_0x7f23eecc3af0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecc33d0'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushImmediate 300
Print 
PushImmediate 301
Print 
Noop '-callexpr_bare: omega/foo2'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call foo2'
PushLabel 'fn_foo2()->void'
Call 'call foo2'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
Label 'dealloc-scope_0x7f23eecc3f10'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f23eecc33d0'
PushImmediate 99
Print 
Label 'dealloc-scope_0x7f23eecc33d0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_main()->void-bail'
Label 'fn_main()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
PushFP 0
Load 
JumpIndirect 
