Noop 'call main'
Noop '-callexpr_bare: omega/main'
Noop 'alloc sz:5(psz:0)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call main'
PushLabel 'fn_main()->void'
Call 'call main'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (5)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Halt 
Label 'fn_f1(int_bool)->int'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
PushImmediate 0
PushImmediate 0
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop 'i: offset 4'
Noop '+--------------+'
PushFP 4'lval for: i'
PushImmediate 10
Store 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop 'i: offset 5'
Noop '+--------------+'
PushFP 5'lval for: i'
PushImmediate 20
Store 
PushFP 5'Accessing i@5'
Load 
Print 
Label 'dealloc-scope_0x7f45ab1e5120'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f45ab1bbc70'
PushFP 4'lval for: i'
PushFP 4'Accessing i@4'
Load 
PushImmediate 1
Add 
Store 
PushFP 4'Accessing i@4'
Load 
Print 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop 'b: offset 5'
Noop '+--------------+'
PushFP 5'lval for: b'
PushImmediate 0'false'
Store 
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop '+--------------+'
PushFP 5'Accessing b@5'
Load 
Print 
Label 'dealloc-scope_0x7f45ab1e51b0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f45ab1ba800'
Label 'dealloc-scope_0x7f45ab1ba800'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f45ab1bbc70'
Label 'dealloc-scope_0x7f45ab1bbc70'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'dealloc-scope_0x7f45ab1e5030'
PushFP -2'Accessing i@-2'
Load 
Print 
PushFP -3'Accessing b@-3'
Load 
Print 
Noop 'store RET'
PushFP -1'lval_offset: -1'
PushImmediate 0
Store 
Noop 'set BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 1
Store 
PushLabel 'dealloc-scope_0x7f45ab1e5030'
JumpIndirect 
Label 'dealloc-scope_0x7f45ab1e5030'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_f1(int_bool)->int-bail'
Label 'fn_f1(int_bool)->int-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
Pop 
Pop 
PushFP 0
Load 
JumpIndirect 
Label 'fn_main()->void'
Noop 'Store RA to memstack'
PushFP 0'lval_offset: 0'
Swap 
Store 
Noop 'allocate func vars'
PushImmediate 0
PushImmediate 0
SaveEvalStack 'Allocate func vars to memstack'
Noop '+--------------+'
Noop '| Symbol table |'
Noop '+--------------+'
Noop 'i: offset 4'
Noop 'b: offset 5'
Noop '+--------------+'
PushFP 4'lval for: i'
PushImmediate 10
Store 
PushFP 5'lval for: b'
PushImmediate 1'true'
Store 
PushFP 4'Accessing i@4'
Load 
Print 
PushFP 5'Accessing b@5'
Load 
Print 
Noop '-callexpr_bare: omega/f1'
Noop 'alloc sz:7(psz:2)'
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
PushImmediate 0
SaveEvalStack 
Noop 'Assign arg to memstack'
PushFP -2'lval_offset: -2'
PushFP 4'Accessing i@4'
Load 
Store 
Noop 'Assign arg to memstack'
PushFP -3'lval_offset: -3'
PushFP 5'Accessing b@5'
Load 
Store 
Noop 'Initialize FP and BAIL'
Noop 'BAIL: NO_BAIL'
PushFP 2'lval_offset: 2'
PushImmediate 0
Store 
PushFP 0'Store our old FP'
Noop 'Assign this FP = SP - 4'
PushSP -4'Set FP to new function scope memstack location'
PopFP 
Noop "Finish storing the caller's FP to the callee's frame"
Noop "store caller's FP to FP_CALLER_OFFSET"
PushFP 1'lval_offset: 1'
Swap 
Store 
Noop '-Call f1'
PushLabel 'fn_f1(int_bool)->int'
Call 'call f1'
Noop '-Epilogue: Return FP to caller, and RET as rval'
Noop 'Retrieve ideal stack for processing'
Noop 'stack push RET'
PushFP -1
Load 
Noop 'Set FP to caller'
Noop 'stack push FP_CALLER'
PushFP 1
Load 
PopFP 'FP = FP_CALLER'
Noop 'Dealloc fsize (7)'
RestoreEvalStack 
Pop 
Pop 
Pop 
Pop 
Pop 
Pop 
Pop 
Noop '-RET as rval'
Pop 'Disregard return value'
Label 'dealloc-scope_0x7f45ab1bb9d0'
Noop 'Peak BAIL'
PushSP -1
Load 
JumpIfNotZero 'fn_main()->void-bail'
Label 'fn_main()->void-bail'
RestoreEvalStack 'Dealloc func vars from memstack'
Pop 
Pop 
PushFP 0
Load 
JumpIndirect 
